if ('pressedQ' %in% colnames(data) == F){
data$pressedQ <- c(rep(NA, nrow(data)))
}
if ('pressedQ_blank' %in% colnames(data) == F){
data$pressedQ_blank <- c(rep(NA, nrow(data)))
}
if ('pressedQ_fix' %in% colnames(data) == F){
data$pressedQ_fix <- c(rep(NA, nrow(data)))
}
# Calculate practice accuracy and RT
pracAcc <- mean(data$pracLDTkey.corr[which(data$procedure == 'LDTpractice')], na.rm = T)
pracRT <- mean(data$pracLDTkey.rt[which(data$procedure == 'LDTpractice')], na.rm = T)
# Calculate overall PM accuracy
corrPM_trials <- c()
for (tarRow in which(data$role == 'target')){
if (data$LDTkey.keys[tarRow] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_blank[tarRow])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_fix[tarRow+1])){
corrPM_trials <- append(corrPM_trials, 1)
} else if(data$LDTkey.keys[tarRow+1] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if(!is.na(data$pressedQ_blank[tarRow+1])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_fix[tarRow+2])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (data$LDTkey.keys[tarRow+2] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_blank[tarRow+2])){
corrPM_trials <- append(corrPM_trials, 1)
} else{
corrPM_trials <- append(corrPM_trials, 0)
}
}
PM_overall <- mean(corrPM_trials)
pmContext <- c()
for (i in which(data$role == 'target')){
if (data$role[i] == 'target'){
pmContext <- append(pmContext, data$context[i])
} else if (data$role[i] == 'aftertar1'){
pmContext <- append(pmContext, data$context[i-1])
} else if (data$role[i] == 'aftertar2'){
pmContext <- append(pmContext, data$context[i-2])
}
}
PM_HD <- sum(corrPM_trials[which(pmContext == 'hd')])/length(which(pmContext == 'hd'))
PM_LD <- sum(corrPM_trials[which(pmContext == 'ld')])/length(which(pmContext == 'ld'))
# Trim trials where RT more greater than +- 2/5 standard deviations from mean of that block
rowsToTrim <- c()
for (b in c(0,1,2,3,4,5,6,7,8,9)){
RTblockM <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == b)], na.rm = T)
RTblockSD <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == b)], na.rm = T)
rows <- which(data$block == b & (data$LDTkey.rt > (RTblockM + 2.5*RTblockSD))|
data$block == b & (data$LDTkey.rt < (RTblockM - 2.5*RTblockSD)))
rowsToTrim <- append(rowsToTrim, rows)
}
tarTrials <- which(data$role == 'target' | data$role == 'aftertar1' | data$role == 'aftertar2')
data <- data[-c(rowsToTrim, tarTrials),]
# Calculate overall RT for HD and LD trials
HDrt_overall <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
HDrt_var <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
LDrt_overall <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
LDrt_var <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
HDacc_overall <- mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
LDacc_overall <- mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
# Calculate block RT for HD and LD trials
for (r in c(0,1,2,3,4,5,6,7,8,9)){
r <- r+1
if (r < 10){block_str <- 'b0'}else{block_str <- 'b'}
assign(paste0('HDrt_', block_str,r), mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'hd')], na.rm = T))
assign(paste0('HDrtVar_', block_str,r), sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'hd')], na.rm = T))
assign(paste0('LDrt_', block_str,r), mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'ld')], na.rm = T))
assign(paste0('LDrtVar_', block_str,r), sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'ld')], na.rm = T))
assign(paste0('HDaccu_', block_str,r), mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'hd')], na.rm = T))
assign(paste0('LDaccu_', block_str,r), mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'ld')], na.rm = T))
}
df[nrow(df)+1, ] <- c(s, PM_overall, PM_HD, PM_LD,
HDrt_overall, LDrt_overall, HDrt_var, LDrt_var,
HDacc_overall, LDacc_overall,
c(mget(ls(pattern = 'HDrt_b')), mget(ls(pattern = 'LDrt_b')),
mget(ls(pattern = 'HDrtVar_b')), mget(ls(pattern = 'LDrtVar_b')),
mget(ls(pattern = 'HDaccu_b')),mget(ls(pattern = 'LDaccu_b'))),
length(rowsToTrim),pracAcc, pracRT)
}
colnames(df) <- c('sub', 'PM_overall', 'PM_HD', 'PM_LD',
'HDrt_overall', 'LDrt_overall', 'HDrt_var', 'LDrt_var',
'HDacc_overall', 'LDacc_overall',
c(ls(pattern = 'HDrt_b'), ls(pattern = 'LDrt_b'),
ls(pattern = 'HDrtVar_b'), ls(pattern = 'LDrtVar_b'),
ls(pattern = 'HDaccu_b'), ls(pattern = 'LDaccu_b')),
'rowsToTrim','pracAcc', 'pracRT')
library(tidyverse)
subs <- c(seq(601,624), seq(635,637))
df <- as.data.frame(matrix(nrow = 0, ncol = 73))
for (s in subs){
# read in data for this participant and get columns of interest
data <- read.csv(paste0('/Users/maddie/Library/CloudStorage/Box-Box/LEAP/version6/data/',s,'_leap6.csv')) %>%
mutate(procedure = if_else(!is.na(LDTtrials.thisRepN), 'LDT',
if_else(!is.na(pracTrial.thisRepN), 'LDTpractice', '')))
for (i in c(seq(0,9))){
iRow <- which(data$LDTblocks.thisN == i)
data$block[c((iRow-12):(iRow-1))] <- c(rep(i,12))
data$block[iRow] <- NA_real_
}
if ('pressedQ' %in% colnames(data) == F){
data$pressedQ <- c(rep(NA, nrow(data)))
}
if ('pressedQ_blank' %in% colnames(data) == F){
data$pressedQ_blank <- c(rep(NA, nrow(data)))
}
if ('pressedQ_fix' %in% colnames(data) == F){
data$pressedQ_fix <- c(rep(NA, nrow(data)))
}
# Calculate practice accuracy and RT
pracAcc <- mean(data$pracLDTkey.corr[which(data$procedure == 'LDTpractice')], na.rm = T)
pracRT <- mean(data$pracLDTkey.rt[which(data$procedure == 'LDTpractice')], na.rm = T)
# Calculate overall PM accuracy
corrPM_trials <- c()
for (tarRow in which(data$role == 'target')){
if (data$LDTkey.keys[tarRow] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_blank[tarRow])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_fix[tarRow+1])){
corrPM_trials <- append(corrPM_trials, 1)
} else if(data$LDTkey.keys[tarRow+1] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if(!is.na(data$pressedQ_blank[tarRow+1])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_fix[tarRow+2])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (data$LDTkey.keys[tarRow+2] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_blank[tarRow+2])){
corrPM_trials <- append(corrPM_trials, 1)
} else{
corrPM_trials <- append(corrPM_trials, 0)
}
}
PM_overall <- mean(corrPM_trials)
pmContext <- c()
for (i in which(data$role == 'target')){
if (data$role[i] == 'target'){
pmContext <- append(pmContext, data$context[i])
} else if (data$role[i] == 'aftertar1'){
pmContext <- append(pmContext, data$context[i-1])
} else if (data$role[i] == 'aftertar2'){
pmContext <- append(pmContext, data$context[i-2])
}
}
PM_HD <- sum(corrPM_trials[which(pmContext == 'hd')])/length(which(pmContext == 'hd'))
PM_LD <- sum(corrPM_trials[which(pmContext == 'ld')])/length(which(pmContext == 'ld'))
# Trim trials where RT more greater than +- 2/5 standard deviations from mean of that block
rowsToTrim <- c()
for (b in c(0,1,2,3,4,5,6,7,8,9)){
RTblockM <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == b)], na.rm = T)
RTblockSD <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == b)], na.rm = T)
rows <- which(data$block == b & (data$LDTkey.rt > (RTblockM + 2.5*RTblockSD))|
data$block == b & (data$LDTkey.rt < (RTblockM - 2.5*RTblockSD)))
rowsToTrim <- append(rowsToTrim, rows)
}
tarTrials <- which(data$role == 'target' | data$role == 'aftertar1' | data$role == 'aftertar2')
data <- data[-c(rowsToTrim, tarTrials),]
# Calculate overall RT for HD and LD trials
HDrt_overall <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
HDrt_var <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
LDrt_overall <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
LDrt_var <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
HDacc_overall <- mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
LDacc_overall <- mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
# Calculate block RT for HD and LD trials
for (r in c(0,1,2,3,4,5,6,7,8,9)){
r <- r+1
if (r < 10){block_str <- 'b0'}else{block_str <- 'b'}
assign(paste0('HDrt_', block_str,r), mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'hd')], na.rm = T))
assign(paste0('HDrtVar_', block_str,r), sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'hd')], na.rm = T))
assign(paste0('LDrt_', block_str,r), mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'ld')], na.rm = T))
assign(paste0('LDrtVar_', block_str,r), sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'ld')], na.rm = T))
assign(paste0('HDaccu_', block_str,r), mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'hd')], na.rm = T))
assign(paste0('LDaccu_', block_str,r), mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'ld')], na.rm = T))
}
df[nrow(df)+1, ] <- c(s, PM_overall, PM_HD, PM_LD,
HDrt_overall, LDrt_overall, HDrt_var, LDrt_var,
HDacc_overall, LDacc_overall,
c(mget(ls(pattern = 'HDrt_b')), mget(ls(pattern = 'LDrt_b')),
mget(ls(pattern = 'HDrtVar_b')), mget(ls(pattern = 'LDrtVar_b')),
mget(ls(pattern = 'HDaccu_b')),mget(ls(pattern = 'LDaccu_b'))),
length(rowsToTrim),pracAcc, pracRT)
}
colnames(df) <- c('sub', 'PM_overall', 'PM_HD', 'PM_LD',
'HDrt_overall', 'LDrt_overall', 'HDrt_var', 'LDrt_var',
'HDacc_overall', 'LDacc_overall',
c(ls(pattern = 'HDrt_b'), ls(pattern = 'LDrt_b'),
ls(pattern = 'HDrtVar_b'), ls(pattern = 'LDrtVar_b'),
ls(pattern = 'HDaccu_b'), ls(pattern = 'LDaccu_b')),
'rowsToTrim','pracAcc', 'pracRT')
write.csv(df,
file = '/Users/maddie/Library/CloudStorage/Box-Box/LEAP/version6/analyses/leap6_compiled.csv',
row.names = F)
library(tidyverse)
subs <- c(seq(702,708), seq(710,733))
df <- as.data.frame(matrix(nrow = 0, ncol = 73))
for (s in subs){
# read in data for this participant and get columns of interest
data <- read.csv(paste0('/Users/maddie/Library/CloudStorage/Box-Box/LEAP/version7/data/',s,'_leap7.csv')) %>%
mutate(procedure = if_else(!is.na(LDTtrials.thisRepN), 'LDT',
if_else(!is.na(pracTrial.thisRepN), 'LDTpractice', '')))
for (i in c(seq(0,9))){
iRow <- which(data$LDTblocks.thisN == i)
data$block[c((iRow-12):(iRow-1))] <- c(rep(i,12))
data$block[iRow] <- NA_real_
}
if ('pressedQ' %in% colnames(data) == F){
data$pressedQ <- c(rep(NA, nrow(data)))
}
if ('pressedQ_blank' %in% colnames(data) == F){
data$pressedQ_blank <- c(rep(NA, nrow(data)))
}
if ('pressedQ_fix' %in% colnames(data) == F){
data$pressedQ_fix <- c(rep(NA, nrow(data)))
}
# Calculate practice accuracy and RT
pracAcc <- mean(data$pracLDTkey.corr[which(data$procedure == 'LDTpractice')], na.rm = T)
pracRT <- mean(data$pracLDTkey.rt[which(data$procedure == 'LDTpractice')], na.rm = T)
# Calculate overall PM accuracy
corrPM_trials <- c()
for (tarRow in which(data$role == 'target')){
if (data$LDTkey.keys[tarRow] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_blank[tarRow])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_fix[tarRow+1])){
corrPM_trials <- append(corrPM_trials, 1)
} else if(data$LDTkey.keys[tarRow+1] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if(!is.na(data$pressedQ_blank[tarRow+1])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_fix[tarRow+2])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (data$LDTkey.keys[tarRow+2] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_blank[tarRow+2])){
corrPM_trials <- append(corrPM_trials, 1)
} else{
corrPM_trials <- append(corrPM_trials, 0)
}
}
PM_overall <- mean(corrPM_trials)
pmContext <- c()
for (i in which(data$role == 'target')){
if (data$role[i] == 'target'){
pmContext <- append(pmContext, data$context[i])
} else if (data$role[i] == 'aftertar1'){
pmContext <- append(pmContext, data$context[i-1])
} else if (data$role[i] == 'aftertar2'){
pmContext <- append(pmContext, data$context[i-2])
}
}
PM_HD <- sum(corrPM_trials[which(pmContext == 'hd')])/length(which(pmContext == 'hd'))
PM_LD <- sum(corrPM_trials[which(pmContext == 'ld')])/length(which(pmContext == 'ld'))
# Trim trials where RT more greater than +- 2/5 standard deviations from mean of that block
rowsToTrim <- c()
for (b in c(0,1,2,3,4,5,6,7,8,9)){
RTblockM <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == b)], na.rm = T)
RTblockSD <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == b)], na.rm = T)
rows <- which(data$block == b & (data$LDTkey.rt > (RTblockM + 2.5*RTblockSD))|
data$block == b & (data$LDTkey.rt < (RTblockM - 2.5*RTblockSD)))
rowsToTrim <- append(rowsToTrim, rows)
}
tarTrials <- which(data$role == 'target' | data$role == 'aftertar1' | data$role == 'aftertar2')
data <- data[-c(rowsToTrim, tarTrials),]
# Calculate overall RT for HD and LD trials
HDrt_overall <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
HDrt_var <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
LDrt_overall <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
LDrt_var <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
HDacc_overall <- mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
LDacc_overall <- mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
# Calculate block RT for HD and LD trials
for (r in c(0,1,2,3,4,5,6,7,8,9)){
r <- r+1
if (r < 10){block_str <- 'b0'}else{block_str <- 'b'}
assign(paste0('HDrt_', block_str,r), mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'hd')], na.rm = T))
assign(paste0('HDrtVar_', block_str,r), sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'hd')], na.rm = T))
assign(paste0('LDrt_', block_str,r), mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'ld')], na.rm = T))
assign(paste0('LDrtVar_', block_str,r), sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'ld')], na.rm = T))
assign(paste0('HDaccu_', block_str,r), mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'hd')], na.rm = T))
assign(paste0('LDaccu_', block_str,r), mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$block == r-1 & data$context == 'ld')], na.rm = T))
}
df[nrow(df)+1, ] <- c(s, PM_overall, PM_HD, PM_LD,
HDrt_overall, LDrt_overall, HDrt_var, LDrt_var,
HDacc_overall, LDacc_overall,
c(mget(ls(pattern = 'HDrt_b')), mget(ls(pattern = 'LDrt_b')),
mget(ls(pattern = 'HDrtVar_b')), mget(ls(pattern = 'LDrtVar_b')),
mget(ls(pattern = 'HDaccu_b')),mget(ls(pattern = 'LDaccu_b'))),
length(rowsToTrim),pracAcc, pracRT)
}
colnames(df) <- c('sub', 'PM_overall', 'PM_HD', 'PM_LD',
'HDrt_overall', 'LDrt_overall', 'HDrt_var', 'LDrt_var',
'HDacc_overall', 'LDacc_overall',
c(ls(pattern = 'HDrt_b'), ls(pattern = 'LDrt_b'),
ls(pattern = 'HDrtVar_b'), ls(pattern = 'LDrtVar_b'),
ls(pattern = 'HDaccu_b'), ls(pattern = 'LDaccu_b')),
'rowsToTrim','pracAcc', 'pracRT')
write.csv(df,
file = '/Users/maddie/Library/CloudStorage/Box-Box/LEAP/version7/analyses/leap7_compiled.csv',
row.names = F)
library(tidyverse)
subs <- c(4965,5157,5279,5817,5872,6171,6888,7023,7600,8255,8289,5225,5277,5514,7309,8352,5026,7083,8062,5530,3885,4798,5871,6445,6655,8260,8378)
df <- as.data.frame(matrix(nrow = 0, ncol = 73))
for (s in subs){
# read in data for this participant and get columns of interest
data <- read.csv(paste0('/Users/maddie/Library/CloudStorage/Box-Box/LEAP/version8/data/raw_data/',s,'_leap8.csv'))
if ('pressedQ' %in% colnames(data) == F){
data$pressedQ <- c(rep(NA, nrow(data)))
}
if ('pressedQ_blank' %in% colnames(data) == F){
data$pressedQ_blank <- c(rep(NA, nrow(data)))
}
if ('pressedQ_fix' %in% colnames(data) == F){
data$pressedQ_fix <- c(rep(NA, nrow(data)))
}
# Calculate practice accuracy and RT
pracAcc <- mean(data$pracLDTkey.corr[which(data$procedure == 'LDTpractice')], na.rm = T)
pracRT <- mean(data$pracLDTkey.rt[which(data$procedure == 'LDTpractice')], na.rm = T)
# Calculate overall PM accuracy
corrPM_trials <- c()
for (tarRow in which(data$role == 'target')){
if (data$LDTkey.keys[tarRow] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_blank[tarRow])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_fix[tarRow+1])){
corrPM_trials <- append(corrPM_trials, 1)
} else if(data$LDTkey.keys[tarRow+1] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if(!is.na(data$pressedQ_blank[tarRow+1])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_fix[tarRow+2])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (data$LDTkey.keys[tarRow+2] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_blank[tarRow+2])){
corrPM_trials <- append(corrPM_trials, 1)
} else{
corrPM_trials <- append(corrPM_trials, 0)
}
}
PM_overall <- mean(corrPM_trials)
pmContext <- c()
for (i in which(data$role == 'target')){
if (data$role[i] == 'target'){
pmContext <- append(pmContext, data$context[i])
} else if (data$role[i] == 'aftertar1'){
pmContext <- append(pmContext, data$context[i-1])
} else if (data$role[i] == 'aftertar2'){
pmContext <- append(pmContext, data$context[i-2])
}
}
PM_HD <- sum(corrPM_trials[which(pmContext == 'hd')])/length(which(pmContext == 'hd'))
PM_LD <- sum(corrPM_trials[which(pmContext == 'ld')])/length(which(pmContext == 'ld'))
# Trim trials where RT more greater than +- 2/5 standard deviations from mean of that block
rowsToTrim <- c()
for (b in c(0,1,2,3,4,5,6,7,8,9)){
RTblockM <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == b)], na.rm = T)
RTblockSD <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == b)], na.rm = T)
rows <- which(data$block == b & (data$LDTkey.rt > (RTblockM + 2.5*RTblockSD))|
data$block == b & (data$LDTkey.rt < (RTblockM - 2.5*RTblockSD)))
rowsToTrim <- append(rowsToTrim, rows)
}
tarTrials <- which(data$role == 'target' | data$role == 'aftertar1' | data$role == 'aftertar2')
data <- data[-c(rowsToTrim, tarTrials),]
# Calculate overall RT for HD and LD trials
HDrt_overall <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
HDrt_var <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
LDrt_overall <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
LDrt_var <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
HDacc_overall <- mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
LDacc_overall <- mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
# Calculate block RT for HD and LD trials
for (r in c(0,1,2,3,4,5,6,7,8,9)){
if (r < 9){block_str <- 'b0'}else{block_str <- 'b'}
assign(paste0('HDrt_',block_str,r+1), mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r & data$context == 'hd')], na.rm = T))
assign(paste0('HDrtVar_',block_str,r+1), sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r & data$context == 'hd')], na.rm = T))
assign(paste0('LDrt_',block_str,r+1), mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r & data$context == 'ld')], na.rm = T))
assign(paste0('LDrtVar_',block_str,r+1), sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r & data$context == 'ld')], na.rm = T))
assign(paste0('HDaccu_',block_str,r+1), mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$block == r & data$context == 'hd')], na.rm = T))
assign(paste0('LDaccu_',block_str,r+1), mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$block == r & data$context == 'ld')], na.rm = T))
}
df[nrow(df)+1, ] <- c(s, PM_overall, PM_HD, PM_LD,
HDrt_overall, LDrt_overall, HDrt_var, LDrt_var,
HDacc_overall,LDacc_overall,
c(mget(ls(pattern = 'HDrt_b')), mget(ls(pattern = 'LDrt_b')),
mget(ls(pattern = 'HDrtVar_b')), mget(ls(pattern = 'LDrtVar_b')),
mget(ls(pattern = 'HDaccu_b')),mget(ls(pattern = 'LDaccu_b'))),
length(rowsToTrim),pracAcc, pracRT)
}
colnames(df) <- c('sub', 'PM_overall', 'PM_HD', 'PM_LD',
'HDrt_overall', 'LDrt_overall', 'HDrt_var', 'LDrt_var',
'HDacc_overall','LDacc_overall',
c(ls(pattern = 'HDrt_b'), ls(pattern = 'LDrt_b'),
ls(pattern = 'HDrtVar_b'), ls(pattern = 'LDrtVar_b'),
ls(pattern = 'HDaccu_b'), ls(pattern = 'LDaccu_b')),
'rowsToTrim','pracAcc', 'pracRT')
write.csv(df,
file = '/Users/maddie/Library/CloudStorage/Box-Box/LEAP/version8/analyses/leap8_compiled.csv',
row.names = F)
library(tidyverse)
expDir <- '/Users/maddie/Library/CloudStorage/Box-Box/LEAP/version9/'
sub_sheet <- read.csv(paste0(expDir, 'leap9_subject_sheet.csv'))
subs <- sub_sheet$indentifier[which(sub_sheet$completed == 1)]
df <- as.data.frame(matrix(nrow = 0, ncol = 351))
for (s in subs){
# read in data for this participant and get columns of interest
data <- read.csv(paste0(expDir, 'data/cleaned_data/',s,'_leap9.csv'))
# Calculate practice accuracy and RT
pracAcc <- mean(data$pracLDTkey.corr[which(data$procedure == 'practiceLDT')], na.rm = T)
pracRT <- mean(data$pracLDTkey.rt[which(data$procedure == 'practiceLDT')], na.rm = T)
# Calculate overall PM accuracy
corrPM_trials <- c()
for (tarRow in which(data$role == 'target')){
if (data$LDTkey.keys[tarRow] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if(!is.na(data$pressedQ_blank[tarRow])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_fix[tarRow+1])){
corrPM_trials <- append(corrPM_trials, 1)
} else if(data$LDTkey.keys[tarRow+1] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if(!is.na(data$pressedQ_blank[tarRow+1])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_fix[tarRow+2])){
corrPM_trials <- append(corrPM_trials, 1)
} else if (data$LDTkey.keys[tarRow+2] == 'q'){
corrPM_trials <- append(corrPM_trials, 1)
} else if (!is.na(data$pressedQ_blank[tarRow+2])){
corrPM_trials <- append(corrPM_trials, 1)
} else{
corrPM_trials <- append(corrPM_trials, 0)
}
}
PM_overall <- mean(corrPM_trials)
pmContext <- c()
for (i in which(data$role == 'target')){
if (data$role[i] == 'target'){
pmContext <- append(pmContext, data$context[i])
} else if (data$role[i] == 'aftertar1'){
pmContext <- append(pmContext, data$context[i-1])
} else if (data$role[i] == 'aftertar2'){
pmContext <- append(pmContext, data$context[i-2])
}
}
PM_HD <- sum(corrPM_trials[which(pmContext == 'hd')])/length(which(pmContext == 'hd'))
PM_LD <- sum(corrPM_trials[which(pmContext == 'ld')])/length(which(pmContext == 'ld'))
# Trim trials where RT more greater than +- 2.5 standard deviations from mean of that block
rowsToTrim <- c()
for (b in c(seq(1,80))){
data <- data %>%
subset(role != 'target')
RTblockM <- mean(data$LDTkey.rt[which(data$block == b)], na.rm = T)
RTblockSD <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == b)], na.rm = T)
rows <- which(data$block == b & (data$LDTkey.rt > (RTblockM + 2.5*RTblockSD))|
data$block == b & (data$LDTkey.rt < (RTblockM - 2.5*RTblockSD)))
rowsToTrim <- append(rowsToTrim, rows)
}
data <- data[-c(rowsToTrim),]
# Calculate overall RT for HD and LD trials
HDrt_overall <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
HDrt_var <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
LDrt_overall <- mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
LDrt_var <- sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
HDacc_overall <- mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$context == 'hd')], na.rm = T)
LDacc_overall <- mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$context == 'ld')], na.rm = T)
# Calculate block RT for HD and LD trials
HD <- c(seq(1,80))
LD <- c(seq(1,80))
for (r in c(seq(1,80))){
if(data$context[which(data$block == r)[1]] == 'hd'){
thisRun <- HD[1]
if (thisRun < 10){block_str <- 'b0'}else{block_str <- 'b'}
assign(paste0('HDrt_',block_str,thisRun), mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r & data$context == 'hd')], na.rm = T))
assign(paste0('HDrtVar_',block_str,thisRun), sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r & data$context == 'hd')], na.rm = T))
assign(paste0('HDaccu_',block_str,thisRun), mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$block == r & data$context == 'hd')], na.rm = T))
HD <- HD[2:length(HD)]
}else if (data$context[which(data$block == r)[1]] == 'ld'){
thisRun <- LD[1]
if (thisRun < 10){block_str <- 'b0'}else{block_str <- 'b'}
assign(paste0('LDrt_',block_str,thisRun), mean(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r & data$context == 'ld')], na.rm = T))
assign(paste0('LDrtVar_',block_str,thisRun), sd(data$LDTkey.rt[which(data$procedure == 'LDT' & data$block == r & data$context == 'ld')], na.rm = T))
assign(paste0('LDaccu_',block_str,thisRun), mean(data$LDTkey.corr[which(data$procedure == 'LDT' & data$block == r & data$context == 'ld')], na.rm = T))
LD <- LD[2:length(LD)]
}
}
df[nrow(df)+1, ] <- c(s, PM_overall, PM_HD, PM_LD,
HDrt_overall, LDrt_overall, HDrt_var, LDrt_var,
HDacc_overall, LDacc_overall,
c(mget(ls(pattern = 'HDrt_b')), mget(ls(pattern = 'LDrt_b')),
mget(ls(pattern = 'HDrtVar_b')), mget(ls(pattern = 'LDrtVar_b')),
mget(ls(pattern = 'HDaccu_b')),mget(ls(pattern = 'LDaccu_b'))),
length(rowsToTrim),pracAcc, pracRT)
}
colnames(df) <- c('sub', 'PM_overall', 'PM_HD', 'PM_LD',
'HDrt_overall', 'LDrt_overall', 'HDrt_var', 'LDrt_var',
'HDacc_overall', 'LDacc_overall',
c(ls(pattern = 'HDrt_b'), ls(pattern = 'LDrt_b'),
ls(pattern = 'HDrtVar_b'), ls(pattern = 'LDrtVar_b'),
ls(pattern = 'HDaccu_b'), ls(pattern = 'LDaccu_b')),
'rowsToTrim','pracAcc', 'pracRT')
write.csv(df,
file = '/Users/maddie/Library/CloudStorage/Box-Box/LEAP/version9/analyses/compiled_data/leap9_compiled.csv',
row.names = F)
